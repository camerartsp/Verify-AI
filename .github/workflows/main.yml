name: Test News Analysis

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mongo:
        image: mongo:latest
        ports:
          - 27017:27017

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'

    - name: Install dependencies
      run: npm install

    - name: Install Chrome for Puppeteer
      run: |
        npx puppeteer browsers install chrome

    - name: Set GEMINI_API_KEY
      run: echo "GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }}" >> $GITHUB_ENV

    - name: Run server
      run: |
        nohup node index.js > server.log 2>&1 &
        sleep 15 # Aguardar o servidor iniciar
        echo "Checking if server is running..."
        if ! nc -zv localhost 3000; then
          echo "Server is not running"
          cat server.log
          exit 1
        fi

    - name: Display server logs
      run: cat server.log

    - name: Test news analysis
      run: |
        response=$(curl -s -o /dev/null -w "%{http_code}" -X POST http://localhost:3000/analyze -d "url=https://www.hardware.com.br/noticias/apple-chatgpt-sem-custos-openai.html")
        echo "HTTP Status Code: $response"
        if [ "$response" -ne 200 ]; then
          echo "Test failed: Non-200 HTTP status code"
          cat server.log
          exit 1
        fi
        response_body=$(curl -X POST http://localhost:3000/analyze -d "url=https://www.hardware.com.br/noticias/apple-chatgpt-sem-custos-openai.html")
        echo "Response: $response_body"
        if [[ "$response_body" != *"confi√°vel"* && "$response_body" != *"95%"* ]]; then
          echo "Test failed: Unexpected response body"
          cat server.log
          exit 1
        fi